(function() {var implementors = {};
implementors["neuro"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"neuro/activations/enum.Activation.html\" title=\"enum neuro::activations::Activation\">Activation</a>","synthetic":true,"types":["neuro::activations::Activation"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/data/struct.ImageDataSet.html\" title=\"struct neuro::data::ImageDataSet\">ImageDataSet</a>","synthetic":true,"types":["neuro::data::image_data::ImageDataSet"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/data/struct.ImageDataSetBuilder.html\" title=\"struct neuro::data::ImageDataSetBuilder\">ImageDataSetBuilder</a>","synthetic":true,"types":["neuro::data::image_data::ImageDataSetBuilder"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/data/struct.ImageOps.html\" title=\"struct neuro::data::ImageOps\">ImageOps</a>","synthetic":true,"types":["neuro::data::image_data::ImageOps"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/data/struct.TabularDataSet.html\" title=\"struct neuro::data::TabularDataSet\">TabularDataSet</a>","synthetic":true,"types":["neuro::data::tabular_data::TabularDataSet"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"neuro/data/enum.DataSetError.html\" title=\"enum neuro::data::DataSetError\">DataSetError</a>","synthetic":true,"types":["neuro::data::DataSetError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"neuro/data/enum.Scaling.html\" title=\"enum neuro::data::Scaling\">Scaling</a>","synthetic":true,"types":["neuro::data::Scaling"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"neuro/errors/enum.Error.html\" title=\"enum neuro::errors::Error\">Error</a>","synthetic":true,"types":["neuro::errors::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"neuro/initializers/enum.Initializer.html\" title=\"enum neuro::initializers::Initializer\">Initializer</a>","synthetic":true,"types":["neuro::initializers::Initializer"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/layers/struct.BatchNorm.html\" title=\"struct neuro::layers::BatchNorm\">BatchNorm</a>","synthetic":true,"types":["neuro::layers::batch_normalization::BatchNorm"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/layers/struct.Conv2D.html\" title=\"struct neuro::layers::Conv2D\">Conv2D</a>","synthetic":true,"types":["neuro::layers::conv2d::Conv2D"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/layers/struct.Dense.html\" title=\"struct neuro::layers::Dense\">Dense</a>","synthetic":true,"types":["neuro::layers::dense::Dense"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/layers/struct.Dropout.html\" title=\"struct neuro::layers::Dropout\">Dropout</a>","synthetic":true,"types":["neuro::layers::dropout::Dropout"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/layers/struct.Flatten.html\" title=\"struct neuro::layers::Flatten\">Flatten</a>","synthetic":true,"types":["neuro::layers::flatten::Flatten"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/layers/struct.MaxPool2D.html\" title=\"struct neuro::layers::MaxPool2D\">MaxPool2D</a>","synthetic":true,"types":["neuro::layers::max_pooling::MaxPool2D"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"neuro/layers/enum.Padding.html\" title=\"enum neuro::layers::Padding\">Padding</a>","synthetic":true,"types":["neuro::layers::conv2d::Padding"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/losses/struct.BinaryCrossEntropy.html\" title=\"struct neuro::losses::BinaryCrossEntropy\">BinaryCrossEntropy</a>","synthetic":true,"types":["neuro::losses::BinaryCrossEntropy"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/losses/struct.CrossEntropy.html\" title=\"struct neuro::losses::CrossEntropy\">CrossEntropy</a>","synthetic":true,"types":["neuro::losses::CrossEntropy"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/losses/struct.MeanAbsoluteError.html\" title=\"struct neuro::losses::MeanAbsoluteError\">MeanAbsoluteError</a>","synthetic":true,"types":["neuro::losses::MeanAbsoluteError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/losses/struct.MeanSquaredError.html\" title=\"struct neuro::losses::MeanSquaredError\">MeanSquaredError</a>","synthetic":true,"types":["neuro::losses::MeanSquaredError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/losses/struct.SoftmaxCrossEntropy.html\" title=\"struct neuro::losses::SoftmaxCrossEntropy\">SoftmaxCrossEntropy</a>","synthetic":true,"types":["neuro::losses::SoftmaxCrossEntropy"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"neuro/metrics/enum.Metrics.html\" title=\"enum neuro::metrics::Metrics\">Metrics</a>","synthetic":true,"types":["neuro::metrics::Metrics"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/models/struct.Network.html\" title=\"struct neuro::models::Network\">Network</a>","synthetic":true,"types":["neuro::models::Network"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/optimizers/struct.SGD.html\" title=\"struct neuro::optimizers::SGD\">SGD</a>","synthetic":true,"types":["neuro::optimizers::SGD"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/optimizers/struct.Adam.html\" title=\"struct neuro::optimizers::Adam\">Adam</a>","synthetic":true,"types":["neuro::optimizers::Adam"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/optimizers/struct.RMSProp.html\" title=\"struct neuro::optimizers::RMSProp\">RMSProp</a>","synthetic":true,"types":["neuro::optimizers::RMSProp"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"neuro/optimizers/struct.AdaDelta.html\" title=\"struct neuro::optimizers::AdaDelta\">AdaDelta</a>","synthetic":true,"types":["neuro::optimizers::AdaDelta"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"neuro/regularizers/enum.Regularizer.html\" title=\"enum neuro::regularizers::Regularizer\">Regularizer</a>","synthetic":true,"types":["neuro::regularizers::Regularizer"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"neuro/tensor/enum.Reduction.html\" title=\"enum neuro::tensor::Reduction\">Reduction</a>","synthetic":true,"types":["neuro::tensor::Reduction"]}];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()